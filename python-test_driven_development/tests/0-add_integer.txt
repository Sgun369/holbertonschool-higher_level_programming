>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(5)
103
>>> add_integer(3)
101
>>> add_integer(0)
98
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/sgun369/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer ")
TypeError: a must be an integer 
>>> add_integer(2, 5, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(5000)
5098
>>> add_integer(1, 0)
1
>>> add_integer(0)
98
>>> add_integer([1, 2, 3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/sgun369/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer ")
TypeError: a must be an integer 
>>> 